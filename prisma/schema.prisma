generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(auto()) @map("_id") @db.ObjectId
  email            String            @unique
  password         String
  completedProfile Boolean           @default(false)
  role             UserRole
  fcmToken         String?           @default("")
  isDeleted        Boolean           @default(false)
  expirationOtp    DateTime?
  otp              Int?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  profile          Profile[]
  Client           Client[]
  ServiceProvider  ServiceProvider[]
  Employ           Employ[]

  @@map("Users")
}

model Client {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName  String
  location  String
  gender    Gender
  age       Int
  image     String?  @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])

  @@map("Client")
}

model Employ {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String?
  location    String
  companyName String
  image       String?  @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])

  @@map("Employ")
}

model ServiceProvider {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName  String
  location  String
  gender    Gender
  age       Int
  exprience Int
  expertise String
  mobile    String
  image     String?  @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])

  @@map("Service-Provider")
}

model Profile {
  id                 String        @id @default(auto()) @map("_id") @db.ObjectId
  fullName           String
  image              String?       @default("")
  maritalStatus      MaritalStatus
  location           String
  maritalVerifyCount Int           @default(0)
  redFlag            Int           @default(0)
  yellowFlag         Int           @default(0)
  greenFlag          Int           @default(0)
  isDeleted          Boolean       @default(false)
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  userId             String        @db.ObjectId
  user               User          @relation(fields: [userId], references: [id])

  @@map("Profile")
}

enum UserRole {
  ADMIN
  Client
  SERVICE_PROVIDER
  EMPLOYER
  CONCIERGE
}

enum MaritalStatus {
  SINGLE
  MARRIED
  IN_RELATIONSHIP
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum FlagType {
  RED
  GREEN
  YELLOW
}
